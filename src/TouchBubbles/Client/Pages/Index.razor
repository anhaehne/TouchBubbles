@page "/"
@using TouchBubbles.Client.Services
@using TouchBubbles.Shared.Models
@using TouchBubbles.Client.Components
@using TouchBubbles.Client.Models.Bubbles
@using System.Reactive.Linq
@using TouchBubbles.Shared.Models.HomeAssistant
@inject IOverlayService OverlayService;
@inject IEntityService EntityService;
@inject IJSRuntime JsRuntime;
@inject IProfileService ProfileService;
@inject IBubbleFactory BubbleFactory;
@inject ISettingsService SettingsService

<div class="swiper-container">
    <div class="swiper-wrapper">
        @foreach (var bubble in _bubbles)
        {
            <div class="swiper-slide" >
                <BubbleView Model="bubble" />
            </div>
        }
    </div>
    <!-- Add Pagination -->
    <div class="swiper-pagination"></div>
</div>

@code
{
    private IReadOnlyCollection<Bubble> _bubbles = Array.Empty<Bubble>();

    protected override async Task OnInitializedAsync()
    {
        ProfileService
            .ActiveProfile
            .SelectMany(p => p.Entities)
            .Select(CreateEntityBubbles)
            .CombineLatest(SettingsService.DefaultBubbles, (entityBubbles, defaultBubbles) => entityBubbles.Concat(defaultBubbles).ToList())
            .SubscribeAsync(async e =>
             {
                 _bubbles = e;
                 StateHasChanged();
                 await UpdateSlidesAsync();
             });

        await EntityService.InitializeAsync();
        await ProfileService.InitializeAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var viewModelReference = DotNetObjectReference.Create(this);
            await JsRuntime.InvokeAsync<string>("Swiper.Initialize", viewModelReference);
            return;
        }

        await UpdateSlidesAsync();
    }


    private IReadOnlyCollection<Bubble> CreateEntityBubbles(IReadOnlyCollection<Entity> entities)
        => entities.Select(e => BubbleFactory.CreateBubble(e)).ToList();
    
    private async Task UpdateSlidesAsync()
    {
        await JsRuntime.InvokeAsync<string>("Swiper.Update", Array.Empty<object>());
    }
}