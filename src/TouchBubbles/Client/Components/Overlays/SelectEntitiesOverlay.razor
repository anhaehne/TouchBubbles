@using TouchBubbles.Client.Services
@using TouchBubbles.Shared.Models.HomeAssistant
@using System.Reactive.Linq
@inherits RxComponentBase
@inject IEntityService EntityService
@inject IProfileService ProfileService
@inject IOverlayService OverlayService

<div class="select-entities-overlay">
    <h3 class="header">Select entities</h3>
    <div class="entities">
        @foreach (var model in _entities)
        {
            <div class="entity">
                <input type="checkbox" checked="@model.IsSelected"/>
                <span class="mdi @model.Entity.Icon"></span>
                @($"{model.Entity.Name} ({model.Entity.Type})")
            </div>
        }
    </div>
</div>

@code {

    private IReadOnlyCollection<EntityModel> _entities = Array.Empty<EntityModel>();

    protected override Task OnInitializedAsync()
    {
        var activeEntitiesIds = ProfileService.ActiveProfile.SelectMany(p => p.EntityIds.ToCollectionObservable());

        var entityModels = EntityService.Entities
            .Select(e => e.OrderBy(e => e.Type).ThenBy(e => e.Name).ToList())
            .Zip(activeEntitiesIds, (entities, selectedIds) => entities.Select(e => new EntityModel(e) {IsSelected = selectedIds.Contains(e.Id)}));

        this.UpdatePropertyWith(entityModels, o => o._entities);

        return Task.CompletedTask;
    }

    private void OnIsSelectedChanged(EntityModel entityModel)
    {

    }

    class EntityModel
    {
        public EntityModel(Entity entity)
        {
            Entity = entity;
        }

        public Entity Entity { get; }

        public bool IsSelected { get; set; }
    }
}
